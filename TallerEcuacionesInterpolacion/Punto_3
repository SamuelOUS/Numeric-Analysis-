import numpy as np
import matplotlib.pyplot as plt

#b) Metodo de Euler con A = 2.5 y R0 = 1

#Funcion aplicando las ED de el numeral a)
def func(t, u):
  w = u[0]
  z = u[1]
  n = len(u)
  y = np.zeros(n)
  r0 = 1
  y[0] = z
  y[1] = (100*((r0/w)**4.2 - 1)- 3/2 * z**2)/(w)
  return y

a = 0 #tiempo inicial en segundos
b = 1 #tiempo final en segundos
h = 1e-4 #espaciamiento

euler_r = Euler(func, a, b, h, np.array([2.5, 0]))

#c) Metodo de Runge Kutta orden 4 con A = 2.5 y R0 = 1

#Funcion aplicando las ED de el numeral a)
def func(t, u):
  w = u[0]
  z = u[1]
  n = len(u)
  y = np.zeros(n)
  r0 = 1
  y[0] = z
  y[1] = (100*((r0/w)**4.2 - 1)- 3/2 * z**2)/(w)
  return y

a = 0 #tiempo inicial en segundos
b = 1 #tiempo final en segundos
h = 1e-4 #espaciamiento
rk4_r = RK4(func, a, b, h, np.array([2.5, 0]))

#d) graficas
results_e = np.array(euler_r)[:,0]
results_ed = np.array(euler_r)[:,1]

results_r = np.array(rk4_r)[:,0]
results_rd = np.array(rk4_r)[:,1]


ux = np.linspace(a, b, len(results_r))
plt.figure(figsize=(10, 6))


plt.subplot(231)
plt.plot(ux, results_e,"r")
plt.xlabel("t")
plt.ylabel("R(t)")
plt.title("Cambio del radio")
plt.legend()

plt.subplot(232)
plt.plot(ux, results_ed,"b")
plt.xlabel("t")
plt.ylabel("R'(t)")
plt.title("Euler \n Velocidad de cambio del radio")
plt.legend()

plt.subplot(233)
plt.plot(results_e, results_ed,"g")
plt.xlabel("R(t)")
plt.ylabel("R'(t)")
plt.title("Diagrama de fase")
plt.legend()

plt.subplot(234)
plt.plot(ux, results_r,"r")
plt.xlabel("t")
plt.ylabel("R(t)")
plt.title("Cambio del radio")
plt.legend()

plt.subplot(235)
plt.plot(ux, results_rd,"b")
plt.xlabel("t")
plt.ylabel("R'(t)")
plt.title("Runge Kutta 4 \n Velocidad de cambio del radio")
plt.legend()

plt.subplot(236)
plt.plot(results_r, results_rd,"g")
plt.xlabel("R(t)")
plt.ylabel("R'(t)")
plt.title("Diagrama de fase")
plt.legend()

plt.tight_layout()
plt.show()
